{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http-service.service.ts","webpack:///./src/app/issue/dashboard/dashboard.component.css","webpack:///./src/app/issue/dashboard/dashboard.component.html","webpack:///./src/app/issue/dashboard/dashboard.component.ts","webpack:///./src/app/issue/issue-create/issue-create.component.css","webpack:///./src/app/issue/issue-create/issue-create.component.html","webpack:///./src/app/issue/issue-create/issue-create.component.ts","webpack:///./src/app/issue/issue-edit/issue-edit.component.css","webpack:///./src/app/issue/issue-edit/issue-edit.component.html","webpack:///./src/app/issue/issue-edit/issue-edit.component.ts","webpack:///./src/app/issue/issue-view/issue-view.component.css","webpack:///./src/app/issue/issue-view/issue-view.component.html","webpack:///./src/app/issue/issue-view/issue-view.component.ts","webpack:///./src/app/issue/issue.module.ts","webpack:///./src/app/shared-component/data-board/data-board.component.css","webpack:///./src/app/shared-component/data-board/data-board.component.html","webpack:///./src/app/shared-component/data-board/data-board.component.ts","webpack:///./src/app/shared-component/shared-component.module.ts","webpack:///./src/app/shared-component/single-data-board/single-data-board.component.css","webpack:///./src/app/shared-component/single-data-board/single-data-board.component.html","webpack:///./src/app/shared-component/single-data-board/single-data-board.component.ts","webpack:///./src/app/user-management/login/login.component.css","webpack:///./src/app/user-management/login/login.component.html","webpack:///./src/app/user-management/login/login.component.ts","webpack:///./src/app/user-management/signup/signup.component.css","webpack:///./src/app/user-management/signup/signup.component.html","webpack:///./src/app/user-management/signup/signup.component.ts","webpack:///./src/app/user-management/user-management.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'projectFrontEnd';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './user-management/login/login.component';\n//resources\nimport {RouterModule} from '@angular/router';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ToastrModule} from 'ngx-toastr';\nimport {HttpClientModule} from '@angular/common/http'\n//modules\nimport { UserManagementModule } from './user-management/user-management.module';\nimport { SharedComponentModule } from './shared-component/shared-component.module';\n//services\nimport { HttpServiceService } from './http-service.service';\nimport { IssueModule } from './issue/issue.module';\n//social login\nimport { SocialLoginModule,AuthServiceConfig,\n  GoogleLoginProvider} from \"angular-6-social-login\";\n\n\nexport function getAuthServiceConfigs(){\n  let config = new AuthServiceConfig(\n      [\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider(\"440119432708-mkpkund91033ei0r05od5fmjvpkcfa6u.apps.googleusercontent.com\")\n        }\n      ]\n  );\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    IssueModule,\n    SharedComponentModule,\n    UserManagementModule,\n    HttpClientModule,\n    SocialLoginModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(), // ToastrModule added\n    RouterModule.forRoot([\n      {path:'login', component:LoginComponent},\n      {path:'', component:LoginComponent},\n      {path:'*', component:LoginComponent},\n      {path:'**', component:LoginComponent}\n    ])\n  ],\n  providers: [HttpServiceService,\n    {\n    provide: AuthServiceConfig,\n    useFactory: getAuthServiceConfigs\n    }\n],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n//OBSERVABLE IMPORTING\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\n//HTTP Import\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from '@angular/common/http';\n//TOASTR IMPORTING\nimport { ToastrService } from 'ngx-toastr';\n//Cookie import.\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpServiceService {\n\n  private url = 'http://api.developtheworld.co.in/api/project';\n\n  constructor(private http:HttpClient,private toastr:ToastrService){}\n\n  public signinFunction(data): Observable<any> {\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n    return this.http.post(`${this.url}/users/login`, params);\n  }// signinFunction end \n\n  public signupFunction(data): Observable<any> {\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobile', data.mobile)\n      .set('email', data.email)\n      .set('password', data.password);\n    return this.http.post(`${this.url}/users/signup`, params);\n\n  }// signupFunction end\n\n  public logout(): Observable<any> {\n    const params = new HttpParams()\n      .set('authToken', Cookie.get('authtoken'))\n    return this.http.post(`${this.url}/users/logout`, params);\n  } // end logout function\n\n  public allUsers = () =>{\n    return this.http.get(`${this.url}/users/allUsers`);\n  }\n\n  public createIssue = (data)=>{\n\n    const params = new HttpParams()\n      .set('by',data.by)\n      .set('title',data.title)\n      .set('description',data.description)\n      .set('byId',data.byId)\n      .set('status',data.status)\n      .set('assignedToId',data.assignedToId)\n      .set('assignedToName',data.assignedToName)\n\n    return this.http.post(`${this.url}/issue/create`,params)\n  }\n\n  public getIssue = (issueId)=>{\n    return this.http.get(`${this.url}/issue/view/${issueId}`);\n  }\n\n  public getComments = (issueId)=>{\n    return this.http.get(`${this.url}/issue/readComment/${issueId}`);\n  }\n\n  public makeComment = (commentData)=>{\n    const params = new HttpParams()\n      .set('issueId',commentData.issueId)\n      .set('description',commentData.description)\n      .set('by',Cookie.get('userName'))\n      .set('byId',Cookie.get('userId'))\n\n    return this.http.post(`${this.url}/issue/addComment`,params);\n  }\n\n  public editIssue(data): Observable<any>{\n    const params = new HttpParams()\n    .set('by',data.by)\n    .set('title',data.title)\n    .set('description',data.description)\n    .set('userId',Cookie.get('userId'))\n    .set('status',data.status)\n    .set('assignedToId',data.assignedToId)\n    .set('assignedToName',data.assignedToName)\n\n    return this.http.post(`${this.url}/issue/edit/${data.issueId}`,params)\n  }\n\n  public assignedIssue = ()=>{\n    return this.http.get(`${this.url}/issue/assigned/${Cookie.get('userId')}`);\n  }\n\n  public searchIssue = (arg,skip=0)=>{\n    return this.http.get(`${this.url}/issue/search?arg=${arg}&skip=${skip}`);\n  }\n\n  public getNotification = ()=>{\n    return this.http.get(`${this.url}/notify/get/${Cookie.get(\"userId\")}`);\n  }\n\n  public addToWatcherList =(issueId)=>{\n    const params = new HttpParams()\n      .set('issueId',issueId)\n      .set('userId',Cookie.get('userId'))\n\n    return this.http.post(`${this.url}/notify/addWatcher/${Cookie.get('userId')}`,params);\n  }\n\n  public getWatcherList = ()=>{\n    return this.http.get(`${this.url}/getwatcherlist/${Cookie.get('userId')}`);\n  }\n\n  public getWatcherIssues = (data)=>{\n    const params = new HttpParams()\n      .set('issueIdArray',data.data[0].issueIdArray);\n\n    return this.http.post(`${this.url}/issue/filter`,params);\n  }\n\n  public getnotifications = ()=>{\n    return this.http.get(`${this.url}/notify/get/${Cookie.get('userId')}`);\n  }\n\n  public removeWatcher = (issueId)=>{\n\n    const params = new HttpParams()\n      .set('issueId',issueId)\n\n    return this.http.post(`${this.url}/removeWatcher/${Cookie.get('userId')}`,params);\n  }\n}\n","module.exports = \".containerNav{\\n    align-items: center;\\n    justify-content: space-around;\\n    margin: 0 !important;\\n    border: 0 !important;\\n    padding: 0 !important;\\n}\\n\\n.noMargin{\\n    margin: 0 !important;\\n    border: 0 !important;\\n    padding: 0 !important;\\n    text-align: center;\\n}\\n\\n.noMargin::first-letter{\\n    text-transform: capitalize;\\n}\\n\\n.noMargin2{\\n    margin: 0 !important;\\n    border: 0 !important;\\n    padding: 0 0 0 5% !important;\\n}\\n\\n.noMargin2::first-letter{\\n    text-transform: capitalize;\\n}\\n\\n.sideNav{\\n    height: 8vh;\\n    width: 100%;\\n    border: 1px 0 1px 0 white solid;\\n}\\n\\n.sideNav:hover{\\n    height: 9vh;\\n    width: 100%;\\n    transition: linear;\\n    background: #1d1e1f;\\n    transition-timing-function: linear 2s;\\n}\\n\\n.sideItem{\\n    color:whitesmoke;\\n}\\n\\n.backgroungColor{\\n    background: transparent;\\n    cursor: pointer;\\n}\\n\\n.navTitle{\\n    border-radius: 100%;\\n    line-height: 1em;\\n    padding: 1em;\\n    text-align: center;\\n    margin: 0em;\\n    width: 2em;\\n    height: 3em;\\n    float: left;\\n    text-transform: uppercase;\\n    background: #96c2c9;\\n}\\n\\n.containerIssues{\\n    height: 100vh;\\n    overflow-y: scroll;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-2 containerNav bg-dark rounded\\\">\\n            <div class=\\\"sideItem p-3 row borderClass\\\">\\n                <div class=\\\"navTitle col-3\\\">\\n                    {{firstChar}}\\n                </div>\\n                <div class=\\\"col-9 noMargin\\\">\\n                    {{userName}}<br>\\n                    Dashboard\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" (click)=\\\"home()\\\"> Home</button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\"\\n                        aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">Search</button>\\n                </div>\\n            </div>\\n            <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\"\\n                    (keydown)=\\\"searchIssue($event)\\\" [(ngModel)]=\\\"searchData\\\">\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" [routerLink]=\\\"['/create']\\\"> create</button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-flag-o\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark  dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\n                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" (click)=\\\"getNotifications()\\\">\\n                        Notification's\\n                        <span class=\\\"badge badge-light\\\" *ngIf=\\\"watcherList\\\">\\n                            <span *ngIf=\\\"watcherList\\\"><span *ngIf=\\\"watcherList.data[0].notificationCount > 0\\\">{{watcherList.data[0].notificationCount}}\\n                            </span></span>\\n                        </span>\\n                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                            <span *ngIf=\\\"notificationData\\\">\\n                                <span *ngFor=\\\"let x of notificationData\\\">\\n                                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/view/'+x.issueId]\\\">{{x.description}}</a>\\n                                    <div class=\\\"dropdown-divider\\\"></div>\\n                                </span>\\n                                <a class=\\\"dropdown-item\\\" style=\\\"text-align:center\\\"><u>see all</u></a>\\n                            </span>\\n                            <span *ngIf=\\\"!notificationData\\\">\\n                                <a class=\\\"dropdown-item\\\"> No Notification Present </a>\\n                            </span>\\n                        </div>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" (click)=\\\"issuesWatching()\\\"> Watching</button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-caret-square-o-left\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" (click)=\\\"functionBacklog()\\\"> Backlog</button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-spinner\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" (click)=\\\"functionInprogess()\\\"> In-progress</button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-file-text\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" (click)=\\\"functionIntest()\\\"> In-test</button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" (click)=\\\"functionDone()\\\"> Done</button>\\n                </div>\\n            </div>\\n            <div class=\\\"sideNav col-12\\\">\\n                <div class=\\\"sideItem\\\">\\n                    <i class=\\\"fa fa-sign-out\\\" aria-hidden=\\\"true\\\"></i>\\n                    <button class=\\\"noMargin2 backgroungColor btn-dark\\\" (click)=\\\"logout()\\\"> Log-Out</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-10 containerIssues\\\" style=\\\"padding:5%\\\">\\n            <span *ngIf=\\\"someIssueData\\\">\\n                <span *ngIf=\\\"toggler\\\">\\n                    <data-board [backlogs]=\\\"backlogs\\\" [inProgress]=\\\"inProgress\\\" [inTest]=\\\"inTest\\\" [done]=\\\"done\\\"></data-board>\\n                </span>\\n                <span *ngIf=\\\"!toggler\\\">\\n                    <single-data-board [data]=\\\"someIssueData\\\"></single-data-board>\\n                </span>\\n            </span>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpServiceService } from '../../http-service.service';\nimport { Cookie } from 'ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  public today = Date.now();\n  public someIssueData: any;\n  public userName: String;\n  public firstChar;\n  public backlogs = [];\n  public inProgress = [];\n  public inTest = [];\n  public done = [];\n  public searchData: String;\n  public toggler: boolean = true;\n  public watcherList: any;\n  public notificationData:any;\n\n  constructor(private http: HttpServiceService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.userName = Cookie.get('userName') || \"Test User\";\n    this.firstChar = this.userName[0];\n\n    this.http.assignedIssue().subscribe(\n      (response) => {\n        this.someIssueData = response['data'];\n        for (let x of this.someIssueData) {\n          switch (x.status) {\n            case 'Backlog':\n              this.backlogs.push(x);\n              break;\n            case 'In-progress':\n              this.inProgress.push(x)\n              break;\n            case 'In-test':\n              this.inTest.push(x)\n              break;\n            case 'Done':\n              this.done.push(x)\n              break;\n          }\n        }\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n\n    this.http.getWatcherList().subscribe(\n      (response) => {\n        this.watcherList = response;\n      }, (error) => {\n        console.log(error);\n        this.toastr.error(\"error while retriving watcherList\");\n      }\n    )\n  }\n\n  public logout = () => {\n    this.http.logout().subscribe(\n      (apiResponse) => {\n        if (apiResponse['status'] == 200) {\n          console.log('logout');\n          console.log(apiResponse);\n          this.router.navigate(['/login']);\n          Cookie.deleteAll();\n        }\n      },\n      (error) => {\n        console.log(error.message);\n      }\n    )\n  }\n\n\n  public searchIssue: any = (event: any) => {\n\n    if (event.keyCode == 13) {\n      this.http.searchIssue(this.searchData).subscribe(\n        (response) => {\n          if (response['status'] == 200) {\n            this.searchData = \"\";\n            this.someIssueData = response['data'];\n            this.toggler = false;\n          } else if (response['status'] == 404) {\n            this.toastr.info('No result Found')\n          }\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error('Some error ocurred');\n        }\n      )\n    }\n\n  }\n\n  public home = () => {\n    this.toggler = true;\n  }\n\n  public functionBacklog = () => {\n    this.toggler = false;\n    this.someIssueData = this.backlogs;\n  }\n\n  public functionInprogess = () => {\n    this.toggler = false;\n    this.someIssueData = this.inProgress;\n  }\n\n  public functionIntest = () => {\n    this.toggler = false;\n    this.someIssueData = this.inTest;\n  }\n\n  public functionDone = () => {\n    this.toggler = false;\n    this.someIssueData = this.done;\n  }\n\n  public getNotification = () => {\n    this.http.getNotification().subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  public issuesWatching = () => {\n    if (this.watcherList['status'] == 200) {\n      this.http.getWatcherIssues(this.watcherList).subscribe(\n        (response) => {\n          if (response['status'] == 200) {\n            this.toggler = false;\n            this.someIssueData = response['data'];\n          } else if (response['status'] == 404) {\n            this.toastr.info('No issues found');\n          }\n        }\n      )\n    } else {\n      this.toastr.info('No issues watching');\n    }\n  }\n\n  public getNotifications = ()=>{\n    console.log('here');\n    this.watcherList.data[0].notificationCount =0;\n\n    if(!this.notificationData){\n      this.http.getNotification().subscribe(\n        (response)=>{\n          console.log(response);\n          if(response['status']==200){\n            this.notificationData = response[\"data\"];\n          }\n        },\n        (error)=>{\n          console.log(error);\n        }\n      )\n    }\n  }\n\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\n    border-left: 5px solid #42A948; /* green */\\n  }\\n  \\n  .ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442; /* red */\\n  }\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">DashBoard</a>\\n</nav>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row p-5\\\" style=\\\"text-align:left\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form #createIssueForm=\\\"ngForm\\\" (ngSubmit)=\\\"createIssue()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Issue Title</label>\\n          <input type=\\\"text\\\" name=\\\"issueTitle\\\" [(ngModel)]=\\\"issueTitle\\\" #title=\\\"ngModel\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Enter issue Title\\\" required>\\n        </div>\\n        <div [hidden]=\\\"title.valid || title.pristine\\\" class=\\\"alert alert-danger\\\">\\n          Issue Title is required\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Description</label>\\n            <app-ngx-editor [placeholder]=\\\"'Enter Description here...'\\\" [spellcheck]=\\\"true\\\" name=\\\"issueDescription\\\" [(ngModel)]=\\\"issueDescription\\\" style=\\\"height:20vh\\\" required></app-ngx-editor>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Status</label>\\n          <select [(ngModel)]=\\\"issueStatus\\\" #category=\\\"ngModel\\\" name=\\\"issueStatus\\\" class=\\\"form-control\\\" id=\\\"category\\\"\\n            required>\\n            <option *ngFor=\\\"let category of possibleStatus\\\" [value]=\\\"category\\\">{{category}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Assign To</label>\\n            <select [(ngModel)]=\\\"assginedTo\\\" #category=\\\"ngModel\\\" name=\\\"assginedTo\\\" class=\\\"form-control\\\" id=\\\"Assgin\\\"\\n              required>\\n              <option *ngFor=\\\"let name of users\\\" [value]=\\\"name.userId\\\">{{name.firstName}} {{name.lastName}}</option>\\n            </select>\\n          </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!createIssueForm.form.valid\\\">Post the issue</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpServiceService } from './../../http-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Cookie } from 'ng2-cookies';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-issue-create',\n  templateUrl: './issue-create.component.html',\n  styleUrls: ['./issue-create.component.css']\n})\nexport class IssueCreateComponent implements OnInit {\n\n  public possibleStatus = ['Backlog', 'In-progress', 'In-test', 'Done'];\n  public users = [];\n\n  public issueTitle: String;\n  public issueDescription: String;\n  public issueStatus: any;\n  public assginedTo: any;\n  public assignedToName: String;\n  public issue: any;\n\n  constructor(private http: HttpServiceService, private toastr: ToastrService, private router: Router) { }\n\n  ngOnInit() {\n    this.issueStatus = this.possibleStatus[0];\n\n    this.http.allUsers().subscribe(\n      (apiResponse) => {\n        if (apiResponse['status'] == 200) {\n          this.users = apiResponse['data'];\n          console.log(this.users)\n        } else {\n          this.toastr.warning('No user Found')\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  public createIssue = () => {\n    for (let user of this.users) {\n      if (user.userId === this.assginedTo) {\n        this.assignedToName = `${user.firstName} ${user.lastName}`\n      }\n    }\n\n    this.issue = {\n      status: this.issueStatus,\n      title: this.issueTitle,\n      description: this.issueDescription,\n      assignedToName: this.assignedToName,\n      assignedToId: this.assginedTo,\n      by: Cookie.get('userName'),\n      byId: Cookie.get('userId')\n    }\n\n    this.http.createIssue(this.issue).subscribe(\n      (response) => {\n        if (response['status'] == 200) {\n          this.toastr.success('New Issue Created');\n          console.log(response);\n          setTimeout(() => {\n            this.router.navigate(['/dashboard'])\n          }, 2000)\n        }\n      }\n    )\n  }\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\n    border-left: 5px solid #42A948; /* green */\\n  }\\n  \\n  .ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442; /* red */\\n  }\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">DashBoard</a>\\n  </nav>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row p-5\\\" style=\\\"text-align:left\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <form #createIssueForm=\\\"ngForm\\\" (ngSubmit)=\\\"createIssue()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Issue Title</label>\\n            <input type=\\\"text\\\" name=\\\"issueTitle\\\" [(ngModel)]=\\\"issueTitle\\\" #title=\\\"ngModel\\\" class=\\\"form-control\\\"\\n              placeholder=\\\"Enter issue Title\\\" required>\\n          </div>\\n          <div [hidden]=\\\"title.valid || title.pristine\\\" class=\\\"alert alert-danger\\\">\\n            Issue Title is required\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Description</label>\\n              <app-ngx-editor [placeholder]=\\\"'Enter Description here...'\\\" [spellcheck]=\\\"true\\\" name=\\\"issueDescription\\\" [(ngModel)]=\\\"issueDescription\\\" style=\\\"height:20vh\\\" required></app-ngx-editor>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Status</label>\\n            <select [(ngModel)]=\\\"issueStatus\\\" #category=\\\"ngModel\\\" name=\\\"issueStatus\\\" class=\\\"form-control\\\" id=\\\"category\\\"\\n              required>\\n              <option *ngFor=\\\"let category of possibleStatus\\\" [value]=\\\"category\\\">{{category}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label>Assign To</label>\\n              <select [(ngModel)]=\\\"assginedTo\\\" #category=\\\"ngModel\\\" name=\\\"assginedTo\\\" class=\\\"form-control\\\" id=\\\"Assgin\\\"\\n                required>\\n                <option *ngFor=\\\"let name of users\\\" [value]=\\\"name.userId\\\">{{name.firstName}} {{name.lastName}}</option>\\n              </select>\\n            </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!createIssueForm.form.valid\\\">Post the issue</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpServiceService } from './../../http-service.service';\nimport {ActivatedRoute,Router} from '@angular/router';\n\n@Component({\n  selector: 'app-issue-edit',\n  templateUrl: './issue-edit.component.html',\n  styleUrls: ['./issue-edit.component.css']\n})\nexport class IssueEditComponent implements OnInit {\n\n  public possibleStatus = ['Backlog', 'In-progress', 'In-test', 'Done'];\n  public users = [];\n\n  public issueTitle: String;\n  public issueDescription: String;\n  public issueStatus: any;\n  public assginedTo: any;\n  public assignedToName: String;\n  public issue: any;\n  public issueId:String;\n\n  constructor(private http: HttpServiceService, private toastr: ToastrService,\n    private router:Router,private _route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.issueId =this._route.snapshot.paramMap.get('issueId');\n\n    this.http.getIssue(this.issueId).subscribe(\n      (response)=>{\n        if(response['status']==200){\n          this.issue = response['data']; \n          this.issueTitle = response['data']['title'];\n          this.issueDescription = response['data']['description'];\n          this.assginedTo = response['data']['assignedToId'];\n          this.assignedToName = response['data']['assignedToName'];\n          this.issueStatus = response['data']['status'];\n        }else{\n          this.toastr.error(\"Issue not found\");\n        }\n      },\n      (error)=>{\n        console.log(error);\n      }\n    )\n\n    this.http.allUsers().subscribe(\n      (apiResponse) => {\n        if (apiResponse['status'] == 200) {\n          this.users = apiResponse['data']\n        } else {\n          this.toastr.warning('No user Found')\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  public createIssue = () => {\n    for (let user of this.users) {\n      if (user.userId === this.assginedTo) {\n        this.assignedToName = `${user.firstName} ${user.lastName}`\n      }\n    }\n\n    this.issue = {\n      issueId:this.issueId,\n      status: this.issueStatus,\n      title: this.issueTitle,\n      description: this.issueDescription,\n      assignedToName: this.assignedToName,\n      assignedToId: this.assginedTo\n    }\n\n    this.http.editIssue(this.issue).subscribe(\n      (response)=>{\n        if(response['status']==200){\n          this.toastr.success(response['message']);\n          setTimeout(()=>{\n            this.router.navigate(['/dashboard'])\n          },2000)\n        }\n      }\n    )\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n</nav>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"data\\\">\\n    <ul class=\\\"list-group p-5\\\" style=\\\"width:100%;\\\">\\n      <li class=\\\"list-group-item list-group-item-dark\\\">\\n        <span style=\\\"font-size:1.3em\\\" class=\\\"letterClass\\\">{{data.title}}</span>\\n        <button type=\\\"button\\\" [ngClass]=\\\"{'btn btn-danger':data.status == 'Backlog','btn btn-warning':data.status == 'In-progress','btn btn-info':data.status == 'In-test','btn btn-success':data.status == 'Done'}\\\"\\n          style=\\\"float:right;font-size:small\\\">{{data.status}}</button>\\n      </li>\\n      <li class=\\\"list-group-item list-group-item-light\\\" [innerHtml]=\\\"data.description\\\"></li>\\n      <li class=\\\"list-group-item list-group-item-light\\\"><b>Reported By:</b> {{data.by}}</li>\\n      <li class=\\\"list-group-item list-group-item-light\\\"><b>Assigned By:</b> {{data.assignedToName}}</li>\\n      <li class=\\\"list-group-item list-group-item-light\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" style=\\\"float:right\\\" [routerLink]=\\\"['/edit/'+data.issueId]\\\">edit</button>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" style=\\\"float:right;margin-right: 2%\\\" (click)=\\\"watchListToggler()\\\">\\n          <span *ngIf=\\\"!isIn\\\">\\n            <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n            Watch\\n          </span>\\n          <span *ngIf=\\\"isIn\\\">\\n            <i class=\\\"fa fa-eye-slash\\\" aria-hidden=\\\"true\\\"></i>\\n            Un Watch\\n          </span>\\n        </button>\\n        <span><b>Created On:</b> \\\"{{data.createdOn | date:\\\"short\\\"}}\\\"</span>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <ul class=\\\"list-group\\\" style=\\\"width:100%;\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">Comment here</span>\\n          </div>\\n          <textarea class=\\\"form-control\\\" aria-label=\\\"With textarea\\\" [(ngModel)]=\\\"comment\\\" placeholder=\\\"Enter Comment here....\\\"></textarea>\\n          <button class=\\\"btn btn-secoundry\\\" style=\\\"float:Right\\\" (click)=\\\"makeComment()\\\">comment</button>\\n        </div>\\n        <span *ngIf=\\\"commentData\\\">\\n          <span *ngFor=\\\"let comments of commentData\\\">\\n            <li class=\\\"list-group-item list-group-item-light\\\"><b>{{comments.by}}</b><br>\\n              {{comments.description}}\\n              <br>\\n              <span style=\\\"font-size:smaller\\\">{{comments.createdOn | date:\\\"short\\\"}}</span>\\n            </li>\\n          </span>\\n        </span>\\n        <span *ngIf=\\\"!commentData\\\">\\n          <li class=\\\"list-group-item list-group-item-light\\\">Be the first one to comment on this issue</li>\\n        </span>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from './../../http-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { identifierModuleUrl } from '@angular/compiler';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'app-issue-view',\n  templateUrl: './issue-view.component.html',\n  styleUrls: ['./issue-view.component.css']\n})\nexport class IssueViewComponent implements OnInit {\n\n  public issueId: String;\n  public data: any;\n  public comment: String;\n  public commentData: any;\n  public makeCommentData: any;\n  public isIn: boolean = false;\n\n\n  constructor(private router: Router, private _route: ActivatedRoute, private http: HttpServiceService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.issueId = this._route.snapshot.paramMap.get('issueId');\n\n    this.http.getIssue(this.issueId).subscribe(\n      (response) => {\n        if (response['status'] == 200) {\n          this.data = response['data'];\n          console.log(this.data);\n        } else {\n          this.toastr.error('No issue by this Id')\n          console.log(response);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n\n    this.getComment();\n\n    this.watchListUpdate();\n  }\n\n  public getComment = () => {\n    this.http.getComments(this.issueId).subscribe(\n      (response) => {\n        if (response['status'] == 200) {\n          this.commentData = response['data'];\n        }\n      },\n      (error) => {\n        this.toastr.error(\"error while retrieving comments\");\n      }\n    )\n  }\n\n  public watchListUpdate = () => {\n    this.http.getWatcherList().subscribe(\n      (response) => {\n        if (response['status'] == 200) {\n          console.log(response);\n          for (let x of response['data'][0]['issueIdArray']) {\n            (x == this.issueId) ? this.isIn = true : \"\";\n          }\n          console.log(this.isIn);\n        }\n      }\n    )\n  }\n\n  public makeComment = () => {\n    this.makeCommentData = {\n      issueId: this.issueId,\n      description: this.comment\n    }\n\n    this.http.makeComment(this.makeCommentData).subscribe(\n      (response) => {\n        if (response['status'] == 200) {\n          this.toastr.success(\"Comment created\");\n          this.getComment();\n          this.comment = \"\";\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    )\n  }\n\n  public addToWatcherList = () => {\n    this.http.addToWatcherList(this.issueId).subscribe(\n      (response) => {\n        if (response[\"status\"] == 200) {\n          this.toastr.success(\"Issue Added To Watcher List\");\n          this.isIn = true;\n          this.watchListUpdate();\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  public removeFromWatcherList = () => {\n    this.http.removeWatcher(this.issueId).subscribe(\n      (response) => {\n        if (response['status'] == 200) {\n          this.toastr.success(\"Issue Removed from Watcher List\");\n          this.isIn = false;\n          this.watchListUpdate();\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  public watchListToggler = ()=>{\n    if(this.isIn){\n      this.removeFromWatcherList();  \n    }else{\n      this.addToWatcherList();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';//FORM\nimport { FormsModule } from '@angular/forms';\n// ROUTER IMPORTING\nimport { RouterModule} from '@angular/router';\n//TOASTR IMPORTING\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SharedComponentModule } from '../shared-component/shared-component.module';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { IssueViewComponent } from './issue-view/issue-view.component';\nimport { IssueEditComponent } from './issue-edit/issue-edit.component';\nimport { IssueCreateComponent } from './issue-create/issue-create.component';\nimport { NgxEditorModule } from 'ngx-editor';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    SharedComponentModule,\n    AngularFontAwesomeModule,\n    NgxEditorModule,\n    ToastrModule,\n    RouterModule.forChild([\n      {path:'dashboard',component:DashboardComponent},\n      {path:'create',component:IssueCreateComponent},\n      {path:'edit/:issueId',component:IssueEditComponent},\n      {path:'view/:issueId',component:IssueViewComponent}\n    ]),\n  ],\n  declarations: [DashboardComponent, IssueViewComponent, IssueEditComponent, IssueCreateComponent]\n})\nexport class IssueModule { }\n","module.exports = \".date{\\n    float: right;\\n}\\n\\n.status{\\n    float: right;\\n    text-align: center;\\n}\\n\\n.cardTitle{\\n    font-size: 1.3em;\\n    text-align: center;\\n}\\n\\n.cardContainer{\\n    box-shadow: 0 0 5px 5px #888;\\n    width: 15vw;\\n    padding: 0;\\n    border: 0;\\n    margin: 3% 0 3% 0;\\n}\\n\\n.cardContainer:hover{\\n    width: 15.2vw;\\n    background: rgb(197, 194, 194);\\n}\\n\\n.columnContainer{\\n    background: lightgray;\\n    border-radius: 5%;\\n    width: 17vw;\\n    padding: 1vw;\\n    margin: 0 0.5vw 0 0.5vw;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.columnTitle{\\n    font-size: 0.8em;\\n    color: rgb(119, 117, 117);\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\" columnContainer\\\">\\n    <div class=\\\"columnTitle\\\">Backlogs</div>\\n    <span *ngIf=\\\"backlogs\\\">\\n      <span *ngFor=\\\"let x of backlogs\\\">\\n        <div class=\\\"card cardContainer\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"card-title\\\">\\n              <span class=\\\"status\\\" style=\\\"color:red\\\">{{x.status}}</span>\\n              <span class=\\\"cardTitle\\\">{{x.title}}</span>\\n            </div>\\n            <p class=\\\"card-text\\\" [innerHtml]=\\\"x.description\\\"></p>\\n            <p>By:{{x.by}}<br><span>On:{{x.createdOn | date:\\\"shortDate\\\"}}</span></p>\\n            <a [routerLink]=\\\"['/view/'+x.issueId]\\\" class=\\\"card-link\\\">view</a>\\n          </div>\\n        </div>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <div class=\\\" columnContainer\\\">\\n    <div class=\\\"columnTitle\\\">In-progress</div>\\n    <span *ngIf=\\\"inProgress\\\">\\n      <span *ngFor=\\\"let x of inProgress\\\">\\n        <div class=\\\"card cardContainer\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"card-title\\\">\\n              <span class=\\\"status\\\" style=\\\"color:yellow\\\">{{x.status}}</span>\\n              <span class=\\\"cardTitle\\\">{{x.title}}</span>\\n            </div>\\n            <p class=\\\"card-text\\\" [innerHtml]=\\\"x.description\\\"></p>\\n            <p>By:{{x.by}}<br><span>On:{{x.createdOn | date:\\\"shortDate\\\"}}</span></p>\\n            <a [routerLink]=\\\"['/view/'+x.issueId]\\\" class=\\\"card-link\\\">view</a>\\n          </div>\\n        </div>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <div class=\\\" columnContainer\\\">\\n    <div class=\\\"columnTitle\\\">In-test</div>\\n    <span *ngIf=\\\"inTest\\\">\\n      <span *ngFor=\\\"let x of inTest\\\">\\n        <div class=\\\"card cardContainer\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"card-title\\\">\\n              <span class=\\\"status\\\" style=\\\"color:blue\\\">{{x.status}}</span>\\n              <span class=\\\"cardTitle\\\">{{x.title}}</span>\\n            </div>\\n            <p class=\\\"card-text\\\" [innerHtml]=\\\"x.description\\\"></p>\\n            <p>By:{{x.by}}<br><span>On:{{x.createdOn | date:\\\"shortDate\\\"}}</span></p>\\n            <a [routerLink]=\\\"['/view/'+x.issueId]\\\" class=\\\"card-link\\\">view</a>\\n          </div>\\n        </div>\\n      </span>\\n    </span>\\n  </div>\\n\\n  <div class=\\\" columnContainer\\\">\\n    <div class=\\\"columnTitle\\\">Done</div>\\n    <span *ngIf=\\\"done\\\">\\n      <span *ngFor=\\\"let x of done\\\">\\n        <div class=\\\"card cardContainer\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"card-title\\\">\\n              <span class=\\\"status\\\" style=\\\"color:green\\\">{{x.status}}</span>\\n              <span class=\\\"cardTitle\\\">{{x.title}}</span>\\n            </div>\\n            <p class=\\\"card-text\\\" [innerHtml]=\\\"x.description\\\"></p>\\n            <p>By:{{x.by}}<br><span>On:{{x.createdOn | date:\\\"shortDate\\\"}}</span></p>\\n            <a [routerLink]=\\\"['/view/'+x.issueId]\\\" class=\\\"card-link\\\">view</a>\\n          </div>\\n        </div>\\n      </span>\\n    </span>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'data-board',\n  templateUrl: './data-board.component.html',\n  styleUrls: ['./data-board.component.css']\n})\nexport class DataBoardComponent implements OnInit {\n\n  @Input() backlogs:any;\n  @Input() inProgress:any;\n  @Input() inTest:any\n  @Input() done:any;\n  \n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataBoardComponent } from './data-board/data-board.component';\nimport {RouterModule} from '@angular/router';\nimport { SingleDataBoardComponent } from './single-data-board/single-data-board.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  declarations: [DataBoardComponent, SingleDataBoardComponent],\n  exports:[DataBoardComponent,SingleDataBoardComponent]\n})\nexport class SharedComponentModule { }\n","module.exports = \".cardContainer{\\n    padding: 0;\\n    margin: 3% 0 3% 0;\\n}\\n\\n.cardContainer:hover{\\n    background: rgb(197, 194, 194);\\n}\\n\\n.classRed{\\n    color:red;\\n}\\n\\n.classYellow{\\n    color:yellow;\\n}\\n\\n.classBlue{\\n    color:blue;\\n}\\n\\n.classGreen{\\n    color:green;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"container\\\">\\n    <span *ngFor=\\\"let x of data\\\">\\n      <div class=\\\"card cardContainer\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"card-title\\\">\\n            <span class=\\\"status\\\" style=\\\"float:right\\\" [ngClass]=\\\"{'classRed':x.status=='Backlog','classYellow':x.status=='In-progress','classBlue':x.status=='In-test','classGreen':x.status=='Done'}\\\">{{x.status}}</span>\\n            <span class=\\\"cardTitle\\\" style=\\\"font-size:1.3em\\\"><b>{{x.title}}</b></span>\\n          </div>\\n          <p class=\\\"card-text\\\" [innerHtml]=\\\"x.description\\\"></p>\\n          <p class=\\\"card-text\\\">Assignd To: {{x.assignedToName}}</p>\\n          <p class=\\\"card-text\\\">By: {{x.by}}</p>\\n          <p><span class=\\\"date\\\">Created On:{{x.createdOn | date:\\\"short\\\"}}</span></p>\\n          <a [routerLink]=\\\"['/view/'+x.issueId]\\\" class=\\\"card-link\\\">view</a>\\n        </div>\\n      </div>\\n    </span>\\n  </div>\\n</div>\"","import { Component, OnInit, Input ,OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'single-data-board',\n  templateUrl: './single-data-board.component.html',\n  styleUrls: ['./single-data-board.component.css']\n})\nexport class SingleDataBoardComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() data:any;\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  ngOnChanges(changes:SimpleChanges){\n    let someData = changes.data;\n    this.data = someData.currentValue;\n  }\n}\n","module.exports = \"\\n.image{\\n    margin: 0 0 0 0;\\n    height: 100%;\\n    width: 100%;\\n}\\n\\n.imageButton{\\n    height:80%;\\n    width:80%;\\n    margin: 0 !important;\\n    border: 0 !important;\\n    padding: 0 !important;\\n    background: white;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Issue Tracker</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"row p-0 m-0\\\">\\n  <div class=\\\"col-sm\\\"></div>\\n  <div class=\\\"col-sm p-5\\\">\\n    <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required\\n      autofocus>\\n    <br>\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\"\\n      required>\\n    <br>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-9\\\">\\n        <button class=\\\"btn btn-lg btn-dark btn-block\\\" type=\\\"button\\\" (click)=\\\"signinFunction()\\\">Sign in</button>\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <button class=\\\"btn btn-lg btn-dark btn-block imageButton\\\" type=\\\"image\\\" data-target=\\\"#exampleModal\\\" data-toggle=\\\"modal\\\"\\n          (click)=\\\"socialSignIn('google')\\\"><img src=\\\"assets/google.png\\\" class=\\\"image\\\" alt=\\\"Responsive image\\\"></button>\\n\\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n          aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Social Login</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <input type=\\\"password\\\" id=\\\"inputPassword2\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password2\\\" placeholder=\\\"Password\\\"\\n                  required>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"signUp()\\\">Sign-Up</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm\\\"></div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpServiceService } from '../../http-service.service';\n\nimport { Router } from '@angular/router'\nimport { ToastrService } from 'ngx-toastr';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { AuthService, GoogleLoginProvider } from 'angular-6-social-login';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    public email: String;\n    public password: String;\n    public password2: String;\n    public socialData: any;\n\n    constructor(private router: Router, private http: HttpServiceService, private toastr: ToastrService, private socialAuthService: AuthService) { }\n\n    ngOnInit() {\n    }\n\n    public signinFunction: any = () => {\n        if (!this.email) {\n            this.toastr.warning(\"Enter the email\");\n        } else if (!this.password) {\n            this.toastr.warning(\"Enter the password\");\n        } else {\n            let data = {\n                email: this.email,\n                password: this.password\n            }\n\n            this.http.signinFunction(data)\n                .subscribe((apiResponse) => {\n                    if (apiResponse.status === 200) {\n                        console.log(apiResponse)\n                        //setting the cokies here \n                        Cookie.set('authtoken', apiResponse.data.authToken);\n                        Cookie.set('userId', apiResponse.data.userDetails.userId);\n                        Cookie.set('userName', `${apiResponse.data.userDetails.firstName} ${(!apiResponse.data.userDetails.lastName || apiResponse.data.userDetails.lastName == 'undefined')?\"\":apiResponse.data.userDetails.lastName}`);\n                        this.toastr.success(apiResponse.message, 'Login Sucessful')\n                        this.router.navigate(['/dashboard'])\n                    } else {\n                        this.toastr.error(apiResponse.message)\n                    }\n                }, (err) => {\n                    if (err.status === 500) {\n                        this.toastr.error('Invalid Password');\n                    }\n                })\n\n        }\n    }\n\n\n    public goToSignUp = () => {\n        this.router.navigate(['/signup'])\n    }\n\n    public socialSignIn(socialPlatform: string) {\n        this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(\n            (userData) => {\n                console.log(socialPlatform + \" sign in data : \", userData);\n                this.socialData = userData;\n            }\n        );\n    }\n\n    public signUp = () => {\n        if (this.password2&&this.socialData) {\n            let data = {\n                firstName: this.socialData.name,\n                mobile: 0,\n                email: this.socialData.email,\n                password: this.password2\n            }\n\n            this.http.signupFunction(data).subscribe(\n              (apiResponse)=>{\n                if(apiResponse[\"status\"]==200){\n                  console.log(apiResponse)\n                  this.toastr.success('Signup sucessful');\n                  setTimeout(()=>{\n                    this.router.navigate(['/dashboard']);\n                  },1000)\n                }else{\n                  this.toastr.error(apiResponse['message']);\n                }\n              },\n              (error)=>{\n                console.log(error);\n                this.toastr.error('error occoured while signing in');\n              }\n            )\n        }else{\n          this.toastr.error(\"password or social data missing\",\"Social SignUp error\")\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Issue Tracker</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"goToLogIn()\\\">log-in</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <div class=\\\"row p-0 m-0\\\">\\n    <div class=\\\"col-sm\\\"></div>\\n    <div class=\\\"col-sm p-5\\\">\\n      <h2 class=\\\"form-signin-heading\\\">Sign Up To Use Service's</h2>\\n      <br>\\n      <span>FirstName: </span>\\n      <label for=\\\"inputFirstName\\\" class=\\\"sr-only\\\">FirstName</label>\\n      <input type=\\\"text\\\" id=\\\"inputFirstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" placeholder=\\\"FirstName\\\" required autofocus>\\n      <br>\\n      <span>LastName: </span>\\n      <label for=\\\"inputLastName\\\" class=\\\"sr-only\\\">LastName</label>\\n      <input type=\\\"text\\\" id=\\\"inputLastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" placeholder=\\\"LastName\\\" required>\\n      <br>\\n      <span>Mobile: </span>\\n      <label for=\\\"inputMobile\\\" class=\\\"sr-only\\\">Mobile</label>\\n      <input type=\\\"number\\\" id=\\\"inputMobile\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobile\\\" placeholder=\\\"Mobile\\\" required>\\n      <br>\\n      <span>Email: </span>\\n      <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n      <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required>\\n      <br>\\n      <span>Password: </span>\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n      <br>\\n      <button class=\\\"btn btn-lg btn-dark btn-block\\\" type=\\\"button\\\" (click)=\\\"signupFunction()\\\">Sign Up</button>\\n    </div>\\n    <div class=\\\"col-sm\\\"></div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpServiceService } from '../../http-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {Cookie} from 'ng2-cookies';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: any;\n  public lastName: any;\n  public mobile: any;\n  public email: any;\n  public password: any;\n  public apiKey: any;\n\n  constructor(private router: Router, private http: HttpServiceService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  public signupFunction = () => {\n    if (!this.firstName) {\n      this.toastr.warning('Enter first Name')\n    } else if (!this.lastName) {\n      this.toastr.warning('Enter Last Name')\n    } else if (!this.mobile) {\n      this.toastr.warning('Enter Mobile No')\n    } else if (!this.email) {\n      this.toastr.warning('Enter Email')\n    } else if (!this.password) {\n      this.toastr.warning('Enter Password')\n    } else {\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName || \"\",\n        mobile: this.mobile || 0,\n        email: this.email,\n        password: this.password\n      }\n    \n      this.http.signupFunction(data).subscribe(\n        (apiResponse)=>{\n          if(apiResponse[\"status\"]==200){\n            console.log(apiResponse)\n            //setting the cokies here \n            this.toastr.success(\"Sign up Successful\");\n            Cookie.set('authtoken', apiResponse.data.authToken);\n            Cookie.set('userId', apiResponse.data.userDetails.userId);\n            Cookie.set('userName', `${apiResponse.data.userDetails.firstName} ${(!apiResponse.data.userDetails.lastName || apiResponse.data.userDetails.lastName == 'undefined')?\"\":apiResponse.data.userDetails.lastName}`);\n            this.toastr.success(apiResponse.message, 'Login Sucessful')\n            this.router.navigate(['/dashboard'])\n          }else{\n            this.toastr.error(apiResponse['message']);\n          }\n        },\n        (error)=>{\n          console.log(error);\n          this.toastr.error('error occoured while signing in');\n        }\n      )\n    }\n  }\n\n\n\n  public goToLogIn = () => {\n    this.router.navigate(['/'])\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n//FORM\nimport {FormsModule} from '@angular/forms';\n// ROUTER IMPORTING\nimport { RouterModule} from '@angular/router';\n//TOASTR IMPORTING\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(), // ToastrModule added\n    RouterModule.forChild([\n      {path:'signup',component:SignupComponent}\n    ])\n  ],\n  declarations: [LoginComponent, SignupComponent]\n})\nexport class UserManagementModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}